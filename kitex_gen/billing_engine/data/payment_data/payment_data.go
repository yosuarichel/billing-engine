// Code generated by thriftgo (0.4.3). DO NOT EDIT.

package payment_data

import (
	"fmt"
)

type PaymentData struct {
	PaymentId   *string `thrift:"payment_id,1,optional" frugal:"1,optional,string" json:"payment_id,omitempty"`
	Amount      *int64  `thrift:"amount,2,optional" frugal:"2,optional,i64" json:"amount,omitempty"`
	PayAmount   *int64  `thrift:"pay_amount,3,optional" frugal:"3,optional,i64" json:"pay_amount,omitempty"`
	Outstanding *int64  `thrift:"outstanding,4,optional" frugal:"4,optional,i64" json:"outstanding,omitempty"`
	TermWeeks   *int32  `thrift:"term_weeks,5,optional" frugal:"5,optional,i32" json:"term_weeks,omitempty"`
	WeeksRemain *int32  `thrift:"weeks_remain,6,optional" frugal:"6,optional,i32" json:"weeks_remain,omitempty"`
}

func NewPaymentData() *PaymentData {
	return &PaymentData{}
}

func (p *PaymentData) InitDefault() {
}

var PaymentData_PaymentId_DEFAULT string

func (p *PaymentData) GetPaymentId() (v string) {
	if !p.IsSetPaymentId() {
		return PaymentData_PaymentId_DEFAULT
	}
	return *p.PaymentId
}

var PaymentData_Amount_DEFAULT int64

func (p *PaymentData) GetAmount() (v int64) {
	if !p.IsSetAmount() {
		return PaymentData_Amount_DEFAULT
	}
	return *p.Amount
}

var PaymentData_PayAmount_DEFAULT int64

func (p *PaymentData) GetPayAmount() (v int64) {
	if !p.IsSetPayAmount() {
		return PaymentData_PayAmount_DEFAULT
	}
	return *p.PayAmount
}

var PaymentData_Outstanding_DEFAULT int64

func (p *PaymentData) GetOutstanding() (v int64) {
	if !p.IsSetOutstanding() {
		return PaymentData_Outstanding_DEFAULT
	}
	return *p.Outstanding
}

var PaymentData_TermWeeks_DEFAULT int32

func (p *PaymentData) GetTermWeeks() (v int32) {
	if !p.IsSetTermWeeks() {
		return PaymentData_TermWeeks_DEFAULT
	}
	return *p.TermWeeks
}

var PaymentData_WeeksRemain_DEFAULT int32

func (p *PaymentData) GetWeeksRemain() (v int32) {
	if !p.IsSetWeeksRemain() {
		return PaymentData_WeeksRemain_DEFAULT
	}
	return *p.WeeksRemain
}
func (p *PaymentData) SetPaymentId(val *string) {
	p.PaymentId = val
}
func (p *PaymentData) SetAmount(val *int64) {
	p.Amount = val
}
func (p *PaymentData) SetPayAmount(val *int64) {
	p.PayAmount = val
}
func (p *PaymentData) SetOutstanding(val *int64) {
	p.Outstanding = val
}
func (p *PaymentData) SetTermWeeks(val *int32) {
	p.TermWeeks = val
}
func (p *PaymentData) SetWeeksRemain(val *int32) {
	p.WeeksRemain = val
}

func (p *PaymentData) IsSetPaymentId() bool {
	return p.PaymentId != nil
}

func (p *PaymentData) IsSetAmount() bool {
	return p.Amount != nil
}

func (p *PaymentData) IsSetPayAmount() bool {
	return p.PayAmount != nil
}

func (p *PaymentData) IsSetOutstanding() bool {
	return p.Outstanding != nil
}

func (p *PaymentData) IsSetTermWeeks() bool {
	return p.TermWeeks != nil
}

func (p *PaymentData) IsSetWeeksRemain() bool {
	return p.WeeksRemain != nil
}

func (p *PaymentData) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PaymentData(%+v)", *p)
}

var fieldIDToName_PaymentData = map[int16]string{
	1: "payment_id",
	2: "amount",
	3: "pay_amount",
	4: "outstanding",
	5: "term_weeks",
	6: "weeks_remain",
}
