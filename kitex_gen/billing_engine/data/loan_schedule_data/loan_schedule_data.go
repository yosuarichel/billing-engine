// Code generated by thriftgo (0.4.3). DO NOT EDIT.

package loan_schedule_data

import (
	"fmt"
)

type LoanScheduleSummaryData struct {
	ScheduleId *int64 `thrift:"schedule_id,1,optional" frugal:"1,optional,i64" json:"schedule_id,omitempty"`
	WeekNumber *int32 `thrift:"week_number,2,optional" frugal:"2,optional,i32" json:"week_number,omitempty"`
	DueDate    *int64 `thrift:"due_date,3,optional" frugal:"3,optional,i64" json:"due_date,omitempty"`
	Amount     *int64 `thrift:"amount,4,optional" frugal:"4,optional,i64" json:"amount,omitempty"`
	IsPaid     *bool  `thrift:"is_paid,5,optional" frugal:"5,optional,bool" json:"is_paid,omitempty"`
}

func NewLoanScheduleSummaryData() *LoanScheduleSummaryData {
	return &LoanScheduleSummaryData{}
}

func (p *LoanScheduleSummaryData) InitDefault() {
}

var LoanScheduleSummaryData_ScheduleId_DEFAULT int64

func (p *LoanScheduleSummaryData) GetScheduleId() (v int64) {
	if !p.IsSetScheduleId() {
		return LoanScheduleSummaryData_ScheduleId_DEFAULT
	}
	return *p.ScheduleId
}

var LoanScheduleSummaryData_WeekNumber_DEFAULT int32

func (p *LoanScheduleSummaryData) GetWeekNumber() (v int32) {
	if !p.IsSetWeekNumber() {
		return LoanScheduleSummaryData_WeekNumber_DEFAULT
	}
	return *p.WeekNumber
}

var LoanScheduleSummaryData_DueDate_DEFAULT int64

func (p *LoanScheduleSummaryData) GetDueDate() (v int64) {
	if !p.IsSetDueDate() {
		return LoanScheduleSummaryData_DueDate_DEFAULT
	}
	return *p.DueDate
}

var LoanScheduleSummaryData_Amount_DEFAULT int64

func (p *LoanScheduleSummaryData) GetAmount() (v int64) {
	if !p.IsSetAmount() {
		return LoanScheduleSummaryData_Amount_DEFAULT
	}
	return *p.Amount
}

var LoanScheduleSummaryData_IsPaid_DEFAULT bool

func (p *LoanScheduleSummaryData) GetIsPaid() (v bool) {
	if !p.IsSetIsPaid() {
		return LoanScheduleSummaryData_IsPaid_DEFAULT
	}
	return *p.IsPaid
}
func (p *LoanScheduleSummaryData) SetScheduleId(val *int64) {
	p.ScheduleId = val
}
func (p *LoanScheduleSummaryData) SetWeekNumber(val *int32) {
	p.WeekNumber = val
}
func (p *LoanScheduleSummaryData) SetDueDate(val *int64) {
	p.DueDate = val
}
func (p *LoanScheduleSummaryData) SetAmount(val *int64) {
	p.Amount = val
}
func (p *LoanScheduleSummaryData) SetIsPaid(val *bool) {
	p.IsPaid = val
}

func (p *LoanScheduleSummaryData) IsSetScheduleId() bool {
	return p.ScheduleId != nil
}

func (p *LoanScheduleSummaryData) IsSetWeekNumber() bool {
	return p.WeekNumber != nil
}

func (p *LoanScheduleSummaryData) IsSetDueDate() bool {
	return p.DueDate != nil
}

func (p *LoanScheduleSummaryData) IsSetAmount() bool {
	return p.Amount != nil
}

func (p *LoanScheduleSummaryData) IsSetIsPaid() bool {
	return p.IsPaid != nil
}

func (p *LoanScheduleSummaryData) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LoanScheduleSummaryData(%+v)", *p)
}

var fieldIDToName_LoanScheduleSummaryData = map[int16]string{
	1: "schedule_id",
	2: "week_number",
	3: "due_date",
	4: "amount",
	5: "is_paid",
}
