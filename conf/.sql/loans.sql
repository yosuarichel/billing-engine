-- ================================
-- Loans Table
-- ================================
CREATE TABLE IF NOT EXISTS loans (
    id BIGINT PRIMARY KEY, -- ID will be generated from app
    customer_id BIGINT NOT NULL, -- Reference to customers.customer_id
    principal NUMERIC(15,0) NOT NULL, -- Save way to store money, e.g. 10000000 
    interest_rate NUMERIC(5,2) NOT NULL, -- percentage, e.g. 5.00 = 5%
    total_amount NUMERIC(15,0) NOT NULL, -- principal + interest
    term_weeks INT NOT NULL,
    start_date DATE NOT NULL,
    status VARCHAR(20) DEFAULT 'ONGOING', -- ONGOING, PAID, DEFAULTED

    -- Audit Columns
    created_at TIMESTAMP NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    updated_at TIMESTAMP,
    updated_by VARCHAR(255),
    deleted_at TIMESTAMP,
    deleted_by VARCHAR(255)
);

-- Comments
COMMENT ON TABLE loans IS 'Stores loan contracts for each customer';
COMMENT ON COLUMN loans.id IS 'Primary key, generated by application';
COMMENT ON COLUMN loans.customer_id IS 'Reference to customers.customer_id';
COMMENT ON COLUMN loans.principal IS 'Loan principal amount';
COMMENT ON COLUMN loans.interest_rate IS 'Interest rate percentage';
COMMENT ON COLUMN loans.total_amount IS 'Total repayment amount including interest';
COMMENT ON COLUMN loans.term_weeks IS 'Loan duration in weeks';
COMMENT ON COLUMN loans.start_date IS 'Date when loan started';
COMMENT ON COLUMN loans.status IS 'Loan status: ONGOING, PAID, DEFAULTED';
COMMENT ON COLUMN loans.created_at IS 'Timestamp when record was created';
COMMENT ON COLUMN loans.created_by IS 'User ID who created the record';
COMMENT ON COLUMN loans.updated_at IS 'Timestamp when record was last updated';
COMMENT ON COLUMN loans.updated_by IS 'User ID who last updated the record';
COMMENT ON COLUMN loans.deleted_at IS 'Soft delete timestamp';
COMMENT ON COLUMN loans.deleted_by IS 'User ID who deleted the record';

-- Indexes
CREATE INDEX idx_loans_customer_id ON loans(customer_id);
CREATE INDEX idx_loans_status ON loans(status);